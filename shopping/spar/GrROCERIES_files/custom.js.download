"undefined"==typeof Shopify&&(Shopify={}),console.log("Test"),Shopify.getCartQuantity=function(){var t=document.getElementById("cartQuant");axios.get("/cart.js").then((function(i){var e=i.data.item_count;t.innerHTML=e})).catch((function(t){console.log(t)})).then((function(){}))},Shopify.addItem=function(t,i,e){Swal.fire({toast:!0,title:"Adding to cart",position:"bottom",onBeforeOpen:()=>{Swal.showLoading()}}),axios.post("/cart/add.js",{items:[{quantity:e,id:i}]}).then((function(i){Swal.fire({toast:!0,icon:"success",title:"Item added",position:"bottom",showConfirmButton:!1,timer:2500}),$("#prod-"+t).removeClass("tray-open"),$("#prod-"+t+" .add_toggle").toggleClass("opened"),Shopify.getCartQuantity()})).catch((function(t){console.log(t)})).then((function(){}))};var searchBar=new Vue({delimiters:["${","}"],el:"#searchBar",data:{message:"Test message",query:"",params:{},result_products:[],result_collections:[],isTyping:!1,isLoading:!1,focused:!1,open:!1},watch:{query:function(t,i){this.searchProducts()}},computed:{availableProducts:function(){return this.result_products.filter((function(t){return t.available}))}},methods:{searchProducts:function(){this.open=!0,this.isLoading=!0,axios.get("/search/suggest.json?q="+this.query+"&resources[type]=product").then((t=>{this.isLoading=!1,this.result_products=t.data.resources.results.products}))},searchPage(){window.location.href="search?type=product&q="+encodeURI(this.query)+"*"},resultPrice:function(t){return Shopify.formatMoney(t,"R {{amount}}")},searchActive(){this.focused=!0},close(){this.focused=!1,this.open=!1},clear(){this.open=!1,this.result_products=[],this.result_collections=[],this.query=""}}});Vue.component("card-cart",{props:["productId","variantId","cartItems"],data:function(){return{count:0,id:parseInt(this.variantId),items:this.cartItems,inCartQuant:0,quantity:0,trayOpen:!1,trayTimer:"",update:{items:[{quantity:1,id:this.variantId.toString()}]}}},watch:{cartItems:function(){this.items=this.cartItems;for(var t=0;t<this.cartItems.length;t++)this.cartItems[t].id==this.id&&(console.log("Matched to cart item!"),this.inCartQuant=this.cartItems[t].quantity,this.inCartQuant>0&&(this.quantity=this.inCartQuant))}},methods:{clickQuant(){0==this.trayOpen&&(this.trayOpen=!0,this.trayTimer=setTimeout((()=>this.closeTray()),5500))},closeTray(){this.trayOpen=!1},add(){0==this.trayOpen&&(this.trayOpen=!0),""!=this.trayTimer&&clearTimeout(this.trayTimer),console.log("Adding!"),this.quantity++,axios.post("/cart/add.js",this.update).then((t=>{Swal.fire({toast:!0,icon:"success",title:"ðŸ›’ Added to cart",position:"bottom",showConfirmButton:!1,timer:2500}),Shopify.getCartQuantity(),this.trayTimer=setTimeout((()=>this.closeTray()),5500)})).catch((function(t){this.quantity--,console.log(t)}))},remove(){console.log("Removing!"),""!=this.trayTimer&&clearTimeout(this.trayTimer),this.quantity--,axios.post("/cart/change.js",{quantity:this.quantity,id:this.variantId}).then((t=>{Swal.fire({toast:!0,icon:"success",title:"ðŸ›’ Updated quantity",position:"bottom",showConfirmButton:!1,timer:2500}),Shopify.getCartQuantity(),this.trayTimer=setTimeout((()=>this.closeTray()),5500)})).catch((function(t){this.quantity++,console.log(t)}))}},template:`\n        <div class="card-cart--adder-block">\n            <div class="card-cart--adder" v-bind:class="{ open: trayOpen }">\n                <div class="card-cart--toggler">\n                    <button class="add_toggle closed opened remove_toggle" @click="remove">\n                        <div class="circle">\n                            <div class="horizontal"></div>\n                            <div class="vertical"></div>\n                        </div>\n                    </button>\n                    <input v-model="this.quantity">\n                    <div v-if="this.quantity > 0" class="click-quant" @click="clickQuant">\n                        \n                        {{ this.quantity }}\n                    </div>\n                    <button class="add_toggle closed" @click="add">\n                        <div class="circle">\n                            <div class="horizontal"></div>\n                            <div class="vertical"></div>\n                        </div>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `});var collectionList=new Vue({delimiters:["${","}"],el:"#collectionList",data:{test:"test",cartItems:[]},mounted(){axios.get("/cart.js").then((t=>{this.cartItems=t.data.items}))},watch:{},methods:{}});var mobileSearch=new Vue({delimiters:["${","}"],el:"#mobileSearch",data:{message:"Test message",query:"",params:{},result_products:[],result_collections:[],isTyping:!1,isLoading:!1,focused:!1,open:!1},watch:{query:function(t,i){this.searchProducts()}},methods:{searchProducts:function(){this.open=!0,this.isLoading=!0,axios.get("/search/suggest.json?q="+this.query+"&resources[type]=product").then((t=>{this.isLoading=!1,this.result_products=t.data.resources.results.products}))},searchPage(){window.location.href="/search?type=product&q="+encodeURI(this.query)+"*"},resultPrice:function(t){return Shopify.formatMoney(t,"R {{amount}}")},searchActive(){this.focused=!0},close(){this.focused=!1,this.open=!1},clear(){this.open=!1,this.result_products=[],this.result_collections=[],this.query=""}}});var cartPage=new Vue({delimiters:["${","}"],el:"#cartPage",data:{cartItems:[],cartTotal:"",update:{}},mounted(){axios.get("/cart.js").then((t=>{this.cartItems=t.data.items,this.cartTotal=Shopify.formatMoney(t.data.total_price,"R {{amount}}")}))},watch:{},methods:{getCartTotal(){axios.get("/cart.js").then((t=>{this.cartTotal=Shopify.formatMoney(t.data.total_price,"R {{amount}}")}))},itemPrice:function(t){return Shopify.formatMoney(t,"R{{amount}}")},decreaseQuant:function(t){t.updating=!0,Swal.fire({toast:!0,title:"Updating quantity...",position:"bottom",onBeforeOpen:()=>{Swal.showLoading()}});var i=t.variant_id.toString();t.quantity>1&&(t.quantity--,this.update={quantity:t.quantity,id:i},axios.post("/cart/change.js",this.update).then((i=>{t.updating=!1,Swal.fire({toast:!0,icon:"success",title:"Updated",position:"bottom",showConfirmButton:!1,timer:2500}),this.getCartTotal(),Shopify.getCartQuantity()})).catch((function(t){console.log(t)})))},increaseQuant:function(t){t.updating=!0,Swal.fire({toast:!0,title:"Updating quantity...",position:"bottom",onBeforeOpen:()=>{Swal.showLoading()}});var i=t.variant_id.toString();t.quantity++,this.update={quantity:t.quantity,id:i},axios.post("/cart/change.js",this.update).then((i=>{t.updating=!1,Swal.fire({toast:!0,icon:"success",title:"Updated",position:"bottom",showConfirmButton:!1,timer:2500}),this.getCartTotal(),Shopify.getCartQuantity()})).catch((function(t){console.log(t)}))},removeItem:function(t,i){Swal.fire({toast:!0,title:"Removing item...",position:"bottom",onBeforeOpen:()=>{Swal.showLoading()}});var e=i.variant_id.toString();this.update={quantity:0,id:e},axios.post("/cart/change.js",this.update).then((i=>{this.cartItems.splice(t,1),Swal.fire({toast:!0,icon:"success",title:"Removed item",position:"bottom",showConfirmButton:!1,timer:2500}),this.getCartTotal(),Shopify.getCartQuantity()})).catch((function(t){console.log(t)}))}}});var productPage=new Vue({delimiters:["${","}"],el:"#productPage",data:{quantity:"1"},methods:{decreaseQuant(){this.quantity>1&&this.quantity--},increaseQuant(){this.quantity++}}});
//# sourceMappingURL=/s/files/1/0417/4580/9565/t/5/assets/custom.js.map?v=5477529337428434179
